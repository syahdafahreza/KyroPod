/* Root variables and global styles from user's prompt */
:root {
  --primary-light: #8abdff;
  --primary: #6d5dfc;
  --primary-dark: #5b0eeb;
  --white: #ffffff;
  --greyLight-1: #e4ebf5;
  --greyLight-2: #c8d0e7;
  --greyLight-3: #bec8e4;
  --greyDark: #9baacf;

  /* Updated Neumorphic Base Colors based on the new reference */
  --neumorphic-base: var(--greyLight-1);
  --neumorphic-light: var(--white);
  --neumorphic-dark: var(--greyLight-2);

  /* Updated Neumorphic Shadows based on the new reference */
  --neumorphic-shadow-out-sm: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
  --neumorphic-shadow-in-sm: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
  --neumorphic-shadow-out-md: 0.8rem 0.8rem 1.4rem var(--greyLight-2),
    -0.2rem -0.2rem 1.8rem var(--white);
  --neumorphic-shadow-flat: 0 0 0 transparent;

  --rounded-md: 1rem;
  --rounded-lg: 3rem;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;
  overflow-y: scroll;
  background: var(--greyLight-1);
  scrollbar-width: auto;
  scrollbar-color: var(--primary) var(--greyLight-1) !important;
}

/* Font Weights */
.font-weight-light {
  font-weight: 300 !important;
}

.font-weight-lighter {
  font-weight: lighter !important;
}

.font-weight-normal {
  font-weight: 400 !important;
}

.font-weight-bold {
  font-weight: 700 !important;
}

.font-weight-bolder {
  font-weight: bolder !important;
}

/* Text Transforms */
.text-lowercase {
  text-transform: lowercase !important;
}
.text-uppercase {
  text-transform: uppercase !important;
}
.text-capitalize {
  text-transform: capitalize !important;
}

.font-italic {
  font-style: italic !important;
}

/* Margins classes from Bootstrap */
.m-0 {
  margin: 0 !important;
}

.mt-0,
.my-0 {
  margin-top: 0 !important;
}

.mr-0,
.mx-0 {
  margin-right: 0 !important;
}

.mb-0,
.my-0 {
  margin-bottom: 0 !important;
}

.ml-0,
.mx-0 {
  margin-left: 0 !important;
}

.m-1 {
  margin: 0.25rem !important;
}

.mt-1,
.my-1 {
  margin-top: 0.25rem !important;
}

.mr-1,
.mx-1 {
  margin-right: 0.25rem !important;
}

.mb-1,
.my-1 {
  margin-bottom: 0.25rem !important;
}

.ml-1,
.mx-1 {
  margin-left: 0.25rem !important;
}

.m-2 {
  margin: 0.5rem !important;
}

.mt-2,
.my-2 {
  margin-top: 0.5rem !important;
}

.mr-2,
.mx-2 {
  margin-right: 0.5rem !important;
}

.mb-2,
.my-2 {
  margin-bottom: 0.5rem !important;
}

.ml-2,
.mx-2 {
  margin-left: 0.5rem !important;
}

.m-3 {
  margin: 1rem !important;
}

.mt-3,
.my-3 {
  margin-top: 1rem !important;
}

.mr-3,
.mx-3 {
  margin-right: 1rem !important;
}

.mb-3,
.my-3 {
  margin-bottom: 1rem !important;
}

.ml-3,
.mx-3 {
  margin-left: 1rem !important;
}

.m-4 {
  margin: 1.5rem !important;
}

.mt-4,
.my-4 {
  margin-top: 1.5rem !important;
}

.mr-4,
.mx-4 {
  margin-right: 1.5rem !important;
}

.mb-4,
.my-4 {
  margin-bottom: 1.5rem !important;
}

.ml-4,
.mx-4 {
  margin-left: 1.5rem !important;
}

.m-5 {
  margin: 3rem !important;
}

.mt-5,
.my-5 {
  margin-top: 3rem !important;
}

.mr-5,
.mx-5 {
  margin-right: 3rem !important;
}

.mb-5,
.my-5 {
  margin-bottom: 3rem !important;
}

.ml-5,
.mx-5 {
  margin-left: 3rem !important;
}

/* --- CSS for Volume Flyout --- */
.volume-flyout-container {
  position: fixed;
  bottom: 30px; /* Distance from the bottom of the screen */
  left: 50%;
  /* Initial state: centered horizontally, but shifted down (off-screen or starting point of animation) and transparent */
  transform: translate(
    -50%,
    70px
  ); /* Starts 70px below its final resting place */
  opacity: 0;
  z-index: 2000; /* Ensure it's above other elements */
  padding: 12px 20px;
  background-color: var(--greyLight-1); /* Modern dark, slightly transparent background */
  color: var(--greyDark); /* Light text color for contrast */
  border-radius: 12px; /* Rounded corners */
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.25), 0 4px 10px rgba(0, 0, 0, 0.15); /* Softer, modern shadow */
  transition: opacity 0.3s ease-out, transform 0.3s ease-out; /* Smooth transitions for fly-in/out */
  pointer-events: none; /* Allow clicks to pass through when hidden/animating */
  min-width: 220px; /* Minimum width to accommodate content nicely */
  box-sizing: border-box;
}

.volume-flyout-container.visible {
  opacity: 1;
  transform: translate(
    -50%,
    0
  ); /* Final position: centered and at 'bottom: 30px' */
  pointer-events: auto; /* Allow interaction when visible */
}

.volume-flyout-content {
  display: flex;
  align-items: center;
  justify-content: space-between; /* Distribute space */
  gap: 12px; /* Space between icon, bar, and value */
}

.volume-flyout-content i {
  font-size: 1.3em; /* Your existing font size */
  flex-shrink: 0;   /* Keep this to prevent shrinking */
  width: 1.6em;     /* FIXED WIDTH: Adjust this value (e.g., 1.5em, 25px)
                       to be wide enough for your largest/widest icon.
                       Using 'em' keeps it relative to the font size. */
  text-align: center; /* Centers the icon glyph within its fixed-width box */
  display: inline-flex; /* Helps with vertical alignment and consistent box behavior */
  align-items: center;
  justify-content: center;
}

.volume-flyout-bar-wrapper {
  flex-grow: 0;
  width: 100px; /* Allow bar to take available space */
  height: 10px; /* Height of the volume bar track */
  background-color: rgba(255, 255, 255, 0.25);
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white); /* Lighter track for the bar */
  border-radius: 5px;
  overflow: hidden;
}

.volume-flyout-bar-fill {
  height: 100%;
  background: var(--primary);
  background: linear-gradient(
    -1deg,
    var(--primary-dark) 0%,
    var(--primary) 50%,
    var(--primary-light) 100%
  ); /* A vibrant accent color (e.g., iOS blue) */
  /* You can use your theme's accent color: var(--accent-color, #007aff); */
  border-radius: 5px;
  transition: width 0.15s linear; /* Fast and smooth transition for bar fill */
}

.volume-flyout-value {
  font-size: 1em;    /* Your existing font size */
  font-weight: 500;  /* Your existing font weight */
  min-width: 35px; /* Remove or comment out min-width if you used it */
  text-align: right; /* Keep this: aligns numbers (0, 10, 100) to the right within the box */
  flex-shrink: 0;    /* Keep this to prevent shrinking */
}
/* --- End of CSS for Volume Flyout --- */

/* CSS untuk Splash Screen */
#splash-screen {
  position: fixed; /* Tetap di posisi yang sama saat scrolling */
  top: 0;
  left: 0;
  width: 100vw; /* Lebar penuh viewport */
  height: 100vh; /* Tinggi penuh viewport */
  background-color: var(--greyLight-1); /* Menggunakan variabel warna dari CSS Anda */
  display: flex;
  flex-direction: column; /* Susun elemen secara vertikal */
  justify-content: center; /* Pusatkan secara vertikal */
  align-items: center; /* Pusatkan secara horizontal */
  z-index: 9999; /* Pastikan di atas elemen lain */
  opacity: 1;
  transition: opacity 0.5s ease-out; /* Transisi untuk menghilang */
}

#splash-screen.hidden {
  opacity: 0;
  pointer-events: none; /* Agar tidak bisa diklik setelah disembunyikan */
}

.spinner {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background-color: var(--greyLight-1); /* Memberikan dasar warna pada spinner, sesuaikan dengan bg splash screen */

  /* Shadow untuk container spinner (track), sama seperti .slider__box */
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
              inset -0.2rem -0.2rem 0.5rem var(--white); /* */
  position: relative; /* Diperlukan untuk memposisikan pseudo-element ::before */
  margin-bottom: 20px; /* Jarak dari teks loading */
}

/* Bagian DINAMIS dari Spinner (Arc yang Berputar dengan Warna) */
.spinner::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%; /* Membuatnya bundar */

  /* Warna spinner (arc yang berputar), menggunakan conic-gradient yang meniru .slider__color */
  /* Ini akan membuat segmen/arc berwarna (misalnya 90 derajat) dengan gradient yang diinginkan,
     dan sisa lingkaran akan transparan. */
  background: conic-gradient(
    from 0deg, /* Titik awal conic gradient */
    var(--primary-dark) 0deg,    /* Warna awal gradient di 0 derajat */
    var(--primary) 45deg,        /* Warna tengah gradient di 45 derajat (tengah dari arc 90 derajat) */
    var(--primary-light) 90deg,  /* Warna akhir gradient di 90 derajat */
    transparent 90.01deg,      /* Mulai transparan setelah arc 90 derajat */
    transparent 360deg         /* Sisa lingkaran transparan */
  );

  /* Membuat efek "cincin" atau "ring" dengan memotong bagian tengah.
     Ketebalan arc/cincin akan sekitar 7px jika spinner berukuran 60px.
     calc(50% - 7px) menghasilkan radius dalam sekitar 23px untuk spinner 60px.
  */
  -webkit-mask: radial-gradient(transparent calc(50% - 5px), white calc(50% - 7px));
  mask: radial-gradient(transparent calc(50% - 5px), white calc(50% - 7px));
  /* Penjelasan mask:
     - 'transparent calc(50% - 7px)': Bagian tengah (hingga radius 23px) akan transparan (terpotong).
     - 'white calc(50% - 7px)': Bagian luar (dari radius 23px ke tepi) akan opak (terlihat).
  */

  animation: spin 1s linear infinite; /* Animasi berputar yang sudah ada */
}

.splash-preview-container {
  min-height: 100vh;
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
  font-family: "Poppins", sans-serif;
  background: var(--greyLight-1);
  gap: 2rem;
  padding: 2rem;
  height: 50rem;
}

/* Preview for Playlist Card on Splash Screen */
.splash-playlist-card-preview {
  background: var(--greyLight-1);
  border-radius: 3rem;
  box-shadow: 0.8rem 0.8rem 1.4rem var(--greyLight-2),
    -0.2rem -0.2rem 1.8rem var(--white);
  display: flex;
  flex-direction: column;
  justify-content: center; /* Centers content (the image) vertically */
  align-items: center;
  overflow: hidden;
  height: 12%;
  flex: 0 0 28rem;
  max-width: 6rem;
  padding: 1.5rem;
  transition: all 0.3s ease-in-out;
  position: relative;
}

.splash-playlist-card-preview img.splash-icon {
  max-width: 100%; /* Adjust percentage to control size relative to parent's content box */
  max-height: 100%; /* Adjust percentage to control size relative to parent's content box */
  object-fit: contain; /* Ensures the image scales down to fit, maintaining aspect ratio */
}

/* Preview for Player Card on Splash Screen */
.splash-player-card-preview {
  background: var(--greyLight-1);
  border-radius: 3rem;
  box-shadow: 0.8rem 0.8rem 1.4rem var(--greyLight-2),
    -0.2rem -0.2rem 1.8rem var(--white);
  display: flex;
  flex-direction: column;
  align-items: center;
  /* Make sure these are updated from previous responses */
  justify-content: flex-start; /* Changed to flex-start */
  gap: 1.5rem; /* Added gap */
  padding: 2rem;
  position: relative;
  flex: 1;
  height: 12%;
  width: 100%;
  transition: all 0.3s ease-in-out;
  overflow: hidden;
}

/* Pastikan @keyframes spin masih ada */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

#splash-screen p {
  font-size: 1.8rem; /* Ukuran font teks loading */
  color: var(--greyDark); /* Warna teks loading */
  font-family: "Poppins", sans-serif; /* Menggunakan font yang sama dengan aplikasi Anda */
}
/* End of SplashScreen */

.hidden-temporarily {
  opacity: 0 !important;
  pointer-events: none !important;
  /* Add transition for smooth hiding/showing */
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  visibility: hidden; /* Ensure it's not clickable and doesn't take up space */
}

/* CSS for Splash Screen Loading Bar */
.loading-bar-container-splash {
  width: 100%; /* Adjust width as needed, relative to splash-player-card-preview */
  height: 15px; /* Adjust height as needed */
  border-radius: 10px; /* Rounded corners for the track */
  margin-top: 0.6rem; /* Space from the top edge of splash-player-card-preview */
  overflow: hidden; /* Ensure fill stays within bounds */
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white); /* Neumorphic inset shadow for the track */
  position: relative; /* For potential future absolute positioning of text if needed */
}

.loading-bar-fill-splash {
  width: 0%; /* Initial width, JavaScript will animate this */
  height: 100%;
  background: var(--primary); /* Fill color */
  background: linear-gradient( /* Optional: Gradient for the fill */
    -1deg,
    var(--primary-dark) 0%,
    var(--primary) 50%,
    var(--primary-light) 100%
  );
  border-radius: 4px; /* Rounded corners for the fill */
  transition: width 0.05s linear; /* Smooth but fast transition for width changes by JS */
}
/* SplashScreen loading */

@media screen and (min-width: 900px) {
  html {
    font-size: 75%;
  }
}

@media (prefers-color-scheme: dark) {
  html {
    background: var(--dark-bg);
    scrollbar-color: var(--dark-scroll-thumb) var(--dark-scroll-track);
  }

  html::-webkit-scrollbar-track {
    background: var(--dark-scroll-track);
  }

  html::-webkit-scrollbar-thumb {
    background-color: var(--dark-scroll-thumb);
    border: 0.2rem solid var(--dark-scroll-thumb-border);
  }
}

.container {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: "Poppins", sans-serif;
  background: var(--greyLight-1);
  gap: 2rem;
  padding: 2rem;
  height: 50rem;
}

.button-container-flex {
  display: flex;
  gap: 1rem;
  justify-content: flex-start;
  align-items: center;
}

.playlist-card {
  background: var(--greyLight-1);
  border-radius: 3rem;
  box-shadow: 0.8rem 0.8rem 1.4rem var(--greyLight-2),
    -0.2rem -0.2rem 1.8rem var(--white);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  height: 12%;
  flex: 0 0 28rem;
  max-width: 28rem;
  padding: 1.5rem;
  transition: all 0.3s ease-in-out;
  position: relative;
  animation: playerCardAppear 1s ease-in-out 2.8s forwards; /* Added for positioning the logo */
}

.playlist-card.collapsed {
  flex: 0 0 6rem;
  max-width: 6rem;
  padding: 1.5rem 0.5rem;
}

.playlist-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  flex-shrink: 0;
  opacity: 0;
  transition: margin-bottom 0.3s ease-in-out;
  animation: fadeIn 0.5s ease-out 3s forwards;
}

/* Equalizer Styles */
.eq-controls {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  transition: opacity 0.3s ease-in-out 0.1s;
}

.eq-band {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.eq-band label {
  font-size: 1.4rem;
  color: var(--greyDark);
  text-align: center;
}

.eq-band span {
  font-size: 1.2rem;
  color: var(--greyLight-3);
  text-align: center;
}

.eq-slider {
  -webkit-appearance: none;
  width: 100%;
  height: 1rem;
  background: var(--greyLight-1);
  border-radius: 1rem;
  outline: none;
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}

.eq-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 1.8rem;
  height: 1.8rem;
  border-radius: 50%;
  background: var(--primary);
  cursor: pointer;
  box-shadow: 0px 0.1rem 0.3rem 0px var(--greyLight-3);
}

.eq-slider::-moz-range-thumb {
  width: 1.8rem;
  height: 1.8rem;
  border-radius: 50%;
  background: var(--primary);
  cursor: pointer;
  box-shadow: 0px 0.1rem 0.3rem 0px var(--greyLight-3);
}

.search-input-container {
  padding: 1rem 0;
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: opacity 0.3s ease-in-out 0.1s;
}

.search-input {
  width: 100%;
  padding: 0.8rem 1.2rem;
  border: none;
  border-radius: var(--rounded-md);
  font-size: 1.4rem;
  box-sizing: border-box;
  transition: all 0.2s ease;
  background-color: var(--neumorphic-base);
  box-shadow: var(--neumorphic-shadow-in-sm);
  color: var(--greyDark);
  outline: none;
}

/* Container for the dropup */
.dropup {
  position: relative;
  display: inline-block; /* Allows side-by-side buttons */
}

/* The button that triggers the dropup */
.dropup-toggle {
  /* Inherits btn__secondary styles */
}

/* The dropup menu content */
.dropup-menu {
  min-width: 110px !important;
  background-color: var(--greyLight-1); /* Or your preferred background */
  box-shadow: 0px -8px 16px 0px rgba(0, 0, 0, 0.2); /* Shadow above */
  z-index: 1000; /* Ensure it's above other content */
  border-radius: 0.5rem; /* Rounded corners */
  padding: 0.5rem 0; /* Padding inside */
  display: flex;
  flex-direction: column;
  align-items: stretch; /* Make items fill width */
}

/* For the actual menu that's now fixed/absolute */
.dropup-menu[style*="position: fixed"] {
  /* Target via attribute if set inline */
  /* Ensure a high z-index to overlay everything else */
  z-index: 1000;
}

/* Individual items in the dropup menu */
.dropup-item {
  background: none;
  border: none;
  color: var(--greyDark); /* Text color */
  padding: 0.75rem 1rem;
  text-align: left;
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.2s ease;
  white-space: nowrap; /* Prevent text wrapping */
}

.dropup-item:hover,
.dropup-item:focus {
  background: linear-gradient(
    330deg,
    var(--primary-dark) 0%,
    var(--primary) 50%,
    var(--primary-light) 100%
  ); /* Highlight on hover */
  color: var(--white); /* Text color on hover */
}

.search-input::placeholder {
  color: var(--greyLight-3); /* Adjusted for better visibility */
}

.search-input:focus {
  box-shadow: var(--neumorphic-shadow-out-sm);
}

.header-buttons-group {
  display: flex;
  gap: 10px;
  align-items: center;
  transition: opacity 0.3s ease-in-out 0.1s;
}

.playlist-card.collapsed .playlist-header {
  justify-content: center;
  margin-bottom: 0;
}

.playlist-header h3 {
  font-size: 2rem;
  margin-right: auto;
  color: var(--greyDark);
  white-space: nowrap;
  transition: opacity 0.3s ease-in-out 0.1s;
}

.playlist-list {
  list-style: none;
  overflow-y: auto;
  flex-grow: 1;
  padding-right: 1rem;
  scrollbar-width: thin;
  scrollbar-color: var(--primary) var(--greyLight-2);
  height: 25rem;
  transition: opacity 0.3s ease-in-out 0.1s;
}

.playlist-list::-webkit-scrollbar {
  width: 0.8rem;
}

.playlist-list::-webkit-scrollbar-track {
  background: var(--greyLight-2);
  border-radius: 0.4rem;
}

.playlist-list::-webkit-scrollbar-thumb {
  background-color: var(--primary);
  border-radius: 0.4rem;
  border: 0.2rem solid var(--greyLight-2);
}

.playlist-item {
  margin-bottom: 0.8rem;
  margin-top: 0.5rem;
  margin-left: 0.5rem;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
  text-overflow: ellipsis;
  border-radius: 1rem;
}

.playlist-item-inner {
  background: var(--greyLight-1);
  border-radius: 1rem;
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
  color: var(--greyDark);
  padding: 1rem 1.5rem;
  font-size: 1.4rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100%;
  transition: all 0.3s ease;
}

.playlist-item:hover .playlist-item-inner {
  color: var(--primary);
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}

.playlist-item.active .playlist-item-inner {
  background: linear-gradient(
    330deg,
    var(--primary-dark) 0%,
    var(--primary) 50%,
    var(--primary-light) 100%
  );
  color: var(--primary-dark);
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--primary-dark),
    inset -0.2rem -0.2rem 0.5rem var(--primary-light);
  border-radius: 1rem;
}

.playlist-song-name {
  flex-grow: 1;
  margin-right: 1rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  cursor: pointer;
}

.btn__delete {
  background: none;
  border: none;
  outline: none;
  cursor: pointer;
  font-size: 1.6rem;
  color: var(--greyDark);
  padding: 0.5rem;
  border-radius: 50%;
  transition: all 0.3s ease;
  flex-shrink: 0;
}

.btn__delete:hover {
  color: var(--primary);
  box-shadow: 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
}

.btn__delete:active {
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
  color: var(--primary-dark);
}

.playlist-item.active .playlist-song-name {
  color: white;
}

.playlist-item.active .btn__delete {
  color: var(--primary-dark); /* Ensure contrast on active background */
}
.playlist-item.active .btn__delete:hover {
  background-color: rgba(
    255,
    255,
    255,
    0.1
  ); /* Lighter hover for active state */
  color: var(--white);
}

.playlist-empty {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: var(--greyDark);
  font-style: italic;
}

/* Main Player Card - Takes remaining space */
.player-card {
  background: var(--greyLight-1);
  border-radius: 3rem;
  box-shadow: 0.8rem 0.8rem 1.4rem var(--greyLight-2),
    -0.2rem -0.2rem 1.8rem var(--white);
  display: flex;
  flex-direction: column;
  align-items: center;
  /* Make sure these are updated from previous responses */
  justify-content: flex-start; /* Changed to flex-start */
  gap: 1.5rem; /* Added gap */
  animation: playerCardAppear 1s ease-in-out 3s forwards;
  padding: 2rem;
  position: relative;
  flex: 1;
  height: 12%;
  max-width: 100%;
  transition: all 0.3s ease-in-out;
  overflow: hidden;
}

@keyframes playerCardAppear {
  0% {
    height: 12%;
  }
  100% {
    height: 100%;
  }
}

.album-art-wrapper {
  max-width: 20rem; /* Keeps it from getting too big */
  width: 100%; /* Makes it responsive up to max-width */
  height: 40%;
  padding-bottom: 0; /* 1:1 aspect ratio */
  position: relative;
  border-radius: 2rem;
  box-shadow: 0.8rem 0.8rem 1.4rem var(--greyLight-2),
    -0.2rem -0.2rem 1.8rem var(--white);
  overflow: hidden;
  opacity: 0;
  animation: fadeIn 1s ease-out 3.4s forwards;
  /* Ensure margin-bottom is removed or commented out here */
  /* margin-bottom: 2rem; /* Original - should be gone */
}

.album-art {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 2rem;
}

.song-info {
  text-align: center;
  margin-bottom: 2rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
  width: 80%;
  opacity: 0;
  animation: fadeIn 1s ease-out 3.6s forwards;
}

.song-title {
  font-size: 2.8rem;
  color: var(--greyDark);
  margin-bottom: 0.5rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* Default for non-scrolling overflow */
  position: relative;
  --marquee-duration: 0s;
  --marquee-distance: 0px;
  width: 100%;
  max-width: 100%;
  /* Always reserve space for both potential gradients */
  padding-left: 30px;
  padding-right: 30px;
}

/* Base styles for both gradients, initially hidden by default unless explicitly made visible */
.song-title::before,
.song-title::after {
  content: "";
  position: absolute;
  top: 0;
  height: 100%;
  width: 30px; /* Width of the fade */
  pointer-events: none;
  z-index: 2;
  opacity: 0; /* Initially hidden */
  transition: opacity 0.3s ease-in-out; /* Smooth transition */
}

/* Left gradient positioning */
.song-title::before {
  left: 0;
  background: linear-gradient(
    to left,
    rgba(228, 235, 245, 0) 0%,
    var(--neumorphic-base) 100%
  );
}

/* Right gradient positioning */
.song-title::after {
  right: 0;
  background: linear-gradient(
    to right,
    rgba(228, 235, 245, 0) 0%,
    var(--neumorphic-base) 100%
  );
}

/* When NOT scrolling (text is static, potentially ellipsized) */
.song-title:not(.is-scrolling) {
  text-overflow: ellipsis; /* Ensure ellipsis is applied */
}

/* Only show right gradient when not scrolling (because text-overflow: ellipsis covers the end) */
.song-title:not(.is-scrolling)::after {
  opacity: 1; /* Show right gradient */
}

/* When SCROLLING */
.song-title.is-scrolling {
  text-overflow: clip; /* Clip content for smooth scrolling */
}

/* Both gradients should be visible when scrolling */
.song-title.is-scrolling::before,
.song-title.is-scrolling::after {
  opacity: 1; /* Show both gradients */
}

.song-title.is-scrolling span {
  display: inline-block;
  white-space: nowrap;
  animation: marquee var(--marquee-duration) linear infinite;
  transform: translateX(0);
}

@keyframes marquee {
  0% {
    transform: translateX(0);
  }

  5% {
    /* Stay at start for a short delay */
    transform: translateX(0);
  }

  95% {
    /* Move to the end */
    transform: translateX(var(--marquee-distance));
  }

  100% {
    /* Instantly jump back for infinite loop */
    transform: translateX(var(--marquee-distance));
  }
}

/* Apply similar logic to song-artist */
.song-artist {
  font-size: 1.6rem;
  color: var(--greyLight-3);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* Default for non-scrolling overflow */
  max-width: 100%;
  position: relative;
  padding-left: 30px;
  padding-right: 30px;
}

.song-artist::before,
.song-artist::after {
  content: "";
  position: absolute;
  top: 0;
  height: 100%;
  width: 30px;
  pointer-events: none;
  z-index: 2;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.song-artist::before {
  left: 0;
  background: linear-gradient(
    to left,
    rgba(228, 235, 245, 0) 0%,
    var(--neumorphic-base) 100%
  );
}

.song-artist::after {
  right: 0;
  background: linear-gradient(
    to right,
    rgba(228, 235, 245, 0) 0%,
    var(--neumorphic-base) 100%
  );
}

.song-artist:not(.is-scrolling-artist) {
  text-overflow: ellipsis;
}

.song-artist:not(.is-scrolling-artist)::after {
  opacity: 1;
}

.song-artist.is-scrolling-artist {
  text-overflow: clip;
}

.song-artist.is-scrolling-artist::before,
.song-artist.is-scrolling-artist::after {
  opacity: 1;
}

.song-artist.is-scrolling-artist span {
  animation-play-state: running;
}

@keyframes marquee-artist {
  0% {
    transform: translateX(0);
  }

  5% {
    transform: translateX(0);
  }

  95% {
    transform: translateX(var(--marquee-distance));
  }

  100% {
    transform: translateX(var(--marquee-distance));
  }
}

.controls-wrapper {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/*  RANGE-SLIDER  */
.slider {
  width: 100%;
  grid-column: 3/4;
  grid-row: 5/6;
  align-self: center;
  display: flex;
  opacity: 0;
  animation: fadeIn 1s ease-out 3.8s forwards;
  flex-direction: column;
}
.progress-slider {
  -webkit-appearance: none; /* Remove browser default styling */
  appearance: none; /* Standard way to remove default styling */
  z-index: 1000;
  width: 100%;
  background: none;
  height: 2rem; /* This is the height of the track area */
  box-shadow: none;
  border-radius: 1rem; /* Match track's border-radius for clipping */
  outline: none; /* Remove focus outline */
  /* The main box-shadow is moved to the track pseudo-elements */
}
.progress-slider::-webkit-slider-thumb {
  -webkit-appearance: none; /* Remove browser default styling for thumb */
  appearance: none;
  width: 2rem; /* Original width */
  height: 2rem; /* Original height */
  border-radius: 50%;
  box-shadow: none; /* Make it circular */
  background: none; /* Original thumb background color */
  cursor: pointer; /* Original thumb shadow */
  margin-top: -0.5rem; /* Vertically center thumb over the 1rem track: (track_height - thumb_height) / 2 = (1rem - 2rem) / 2 = -0.5rem */
}
.progress-slider::-moz-range-thumb {
  width: 0; /* Set width to 0 */
  height: 0; /* Set height to 0 */
  border-radius: 50%;
  background: transparent;
  appearance: none; /* Make background transparent */
  cursor: pointer;
  border: 0; /* Ensure no border is visible */
}
.slider__box {
  width: 100%;
  height: 1rem;
  cursor: pointer;
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
  border-radius: 1rem;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}
.slider__btn {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  background: var(--white);
  position: absolute; /* Already there */
  box-shadow: 0px 0.1rem 0.3rem 0px var(--greyLight-3);
  z-index: 200;
  display: flex;
  justify-content: center;
  align-items: center;
  --thumb-half-width: 1rem; /* Half of 2rem, already correct */
  top: 50%; /* Make sure it's vertically centered */
  transform: translateY(-50%); /* For perfect vertical centering */
  /* Remove any existing 'left' property from here if it conflicts */
}
.slider__btn:hover ~ .slider__tooltip {
  opacity: 1;
}
.slider__btn::after {
  content: "";
  position: absolute;
  width: 0.8rem;
  height: 0.8rem;
  border-radius: 50%;
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}
.slider__color {
  height: 100%;
  /* width will be set by JS */
  position: absolute;
  left: 0;
  z-index: 100;
  border-radius: inherit;
  background: var(--primary);
  background: linear-gradient(
    -1deg,
    var(--primary-dark) 0%,
    var(--primary) 50%,
    var(--primary-light) 100%
  );
  /* Add this to ensure it doesn't overflow visually */
  overflow: hidden; /* If any content were to push past the bounds */
  /* Ensure the border-radius applies nicely on the right edge */
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}
.slider__tooltip {
  position: absolute;
  top: 2.6rem; /* Adjust as needed */
  border-radius: 0.6rem;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.2rem;
  color: var(--primary);
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
  opacity: 0;
  transition: opacity 0.3s ease;
  white-space: nowrap;
  transform: translateX(-50%); /* Already correct for centering */
}
.time-display {
  display: flex;
  justify-content: space-between;
  width: 100%;
  font-size: 1.2rem;
  color: var(--greyDark);
  margin-top: 0.5rem;
  position: relative; /* Ensure it stays below the absolute elements */
  z-index: 400; /* Make sure time display is above the hidden slider */
}

.player-buttons {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 20px;
  opacity: 0;
  animation: fadeIn 1s ease-out 4s forwards;
  margin-bottom: 20px;
}

.icon__prev,
.icon__next,
.icon__repeat,
.icon__shuffle {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2.2rem;
  color: var(--greyDark);
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  background: none;
  outline: none;
}

.icon__prev:hover,
.icon__next:hover,
.icon__repeat:hover,
.icon__shuffle:hover {
  color: var(--primary);
}

.icon__prev:active,
.icon__next:active,
.icon__repeat.active,
.icon__shuffle.active {
  color: #434190;
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}

/* Reusing and adapting .circle and .circle__btn from prompt */
.circle {
  width: 9rem;
  /* Adjusted for better fit */
  height: 9rem;
  /* Adjusted for better fit */
  justify-self: center;
  border-radius: 1rem;
  display: grid;
  grid-template-rows: 1fr;
  justify-items: center;
  align-items: center;
  position: relative;
}

.circle__btn {
  grid-row: 1/2;
  grid-column: 1/2;
  width: 6rem;
  height: 6rem;
  display: flex;
  margin: 0.6rem;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  font-size: 3.2rem;
  color: var(--primary);
  z-index: 300;
  background: var(--greyLight-1);
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
  cursor: pointer;
  position: relative;
  outline: none;
  border: none;
  /* Remove outline on focus */
}

.circle__btn.shadow {
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}

.circle__btn .fa-play,
.circle__btn .fa-pause {
  /* Apply the gradient background to the icon itself */
  background-image: linear-gradient(
    330deg,
    var(--primary-dark) 0%,
    var(--primary) 50%,
    var(--primary-light) 100%
  );

  /* Clip the background to the text (icon) shape */
  -webkit-background-clip: text;
  background-clip: text;

  /* Make the icon's color transparent so the clipped background shows through */
  color: transparent;

  /* Optional: Add a fallback color for older browsers */
  /* color: var(--primary); */
  position: absolute;
  top: 50%;
  /* Added for vertical centering */
  left: 50%;
  /* Added for horizontal centering */
  transform: translate(-50%, -50%);
  /* Added for precise centering */
  transition: all 0.2s ease-in-out;
}

/* Control visibility of play/pause icons based on isPlaying state */
.circle__btn .fa-play {
  opacity: 1;
}

.circle__btn .fa-pause {
  opacity: 0;
}

.circle__btn.shadow .fa-play {
  opacity: 0;
}

.circle__btn.shadow .fa-pause {
  opacity: 1;
}

.circle__back-1,
.circle__back-2 {
  grid-row: 1/2;
  grid-column: 1/2;
  width: 6rem;
  height: 6rem;
  border-radius: 50%;
  filter: blur(1px);
  z-index: 100;
}

.circle__back-1 {
  box-shadow: 0.4rem 0.4rem 0.8rem var(--greyLight-2),
    -0.4rem -0.4rem 0.8rem var(--white);
  background: linear-gradient(
    to bottom right,
    var(--greyLight-2) 0%,
    var(--white) 100%
  );
  animation: waves 4s ease-in-out infinite;
}

.circle__back-1.paused {
  animation-play-state: paused;
}

.circle__back-2 {
  box-shadow: 0.4rem 0.4rem 0.8rem var(--greyLight-2),
    -0.4rem -0.4rem 0.8rem var(--white);
  animation: waves 4s ease-in-out 2s infinite;
}

.circle__back-2.paused {
  animation-play-state: paused;
}

@keyframes waves {
  0% {
    transform: scale(1);
    opacity: 0;
    animation-timing-function: ease-in-out;
    /* Apply to keyframes for smoother transitions between states */
  }
  10% {
    transform: scale(1);
    opacity: 1;
    animation-timing-function: ease-in-out;
    /* Apply to keyframes for smoother transitions between states */
  }

  50% {
    opacity: 1;
    animation-timing-function: ease-in-out;
  }

  100% {
    transform: scale(2);
    opacity: 0;
    animation-timing-function: ease-in-out;
  }
}

.volume-control {
  width: 60%;
  display: flex;
  align-items: center;
  opacity: 0;
  animation: fadeIn 1s ease-out 4.2s forwards;
  gap: 1rem;
}

.volume-control i {
  font-size: 2rem;
  color: var(--greyDark);
}

.volume-slider {
  -webkit-appearance: none;
  width: 100%;
  height: 1rem;
  background: var(--greyLight-1);
  border-radius: 1rem;
  outline: none;
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}

.volume-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 1.8rem;
  height: 1.8rem;
  border-radius: 50%;
  background: var(--primary);
  cursor: pointer;
  box-shadow: 0px 0.1rem 0.3rem 0px var(--greyLight-3);
}

.volume-slider::-moz-range-thumb {
  width: 1.8rem;
  height: 1.8rem;
  border-radius: 50%;
  background: var(--primary);
  cursor: pointer;
  box-shadow: 0px 0.1rem 0.3rem 0px var(--greyLight-3);
}

.btn {
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
  background-color: var(--neumorphic-base);
  padding: 0.8rem 1.6rem;
  border-radius: 1rem;
  font-weight: 500;
  transition: all 0.3s ease;
  border: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.6rem;
  font-size: 1.6rem;
  text-decoration: none;
  white-space: nowrap;
}
.btn-pl {
  padding: 0.8rem 1.4rem;
}

.btn__secondary {
  color: var(--greyDark);
}

.btn__secondary:hover {
  color: var(--primary);
}

.btn__secondary:active {
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}

.btn p {
  font-size: 1.6rem;
}

.sidebar-toggle-btn,
.search-toggle-btn {
  width: 4.5rem;
  height: 4.5rem;
  border-radius: 50%;
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),
    -0.2rem -0.2rem 0.5rem var(--white);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  color: var(--greyDark);
  cursor: pointer;
  border: none;
  background: var(--greyLight-1);
  outline: none;
  transition: opacity 0.3s ease-in-out;
  z-index: 500;
  opacity: 1;
}

/* 2. Create a new class to apply the initial animation specifically to the EQ toggle button */
/* This class will be conditionally added in React */
.sidebar-toggle-btn.apply-initial-fade {
  opacity: 0; /* Start transparent for the animation */
  animation: fadeIn 0.5s ease-out 4s forwards; /* Use your existing @keyframes fadeIn */
}

/* NEW RULE: Hide the equalizer toggle button when the equalizer sidebar is open */
.sidebar-toggle-btn.eq-button-hidden {
  opacity: 0; /* Fade out */
  pointer-events: none; /* Make it unclickable when hidden */
}

.sidebar-toggle-btn:hover,
.search-toggle-btn:hover {
  color: var(--primary);
}

.sidebar-toggle-btn:active,
.search-toggle-btn:active {
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
    inset -0.2rem -0.2rem 0.5rem var(--white);
}

/* Styles for the new logo */
.playlist-card-logo {
  display: none;
  position: absolute;
  color: var(--primary);
  font-size: 2.4rem;
  z-index: 10;
  transition: opacity 1s ease-in-out, transform 0.3s ease-in-out;
  align-items: center;
  justify-content: start;
  opacity: 1;
}

/* 4. Create a new class to apply the initial animation specifically to the logo */
/* This class will be conditionally added in React */
.playlist-card-logo.apply-initial-fade {
  opacity: 0; /* Start transparent for the animation */
  animation: fadeIn 0.5s ease-out 4s forwards; /* Use your existing @keyframes fadeIn */
}

.playlist-card.collapsed .playlist-card-logo {
  display: flex; /* Use flex to center the icon */
  /* Default collapsed state (vertical strip on large screens) */
  /* The card is 6rem wide. padding: 1.5rem 0.5rem; */
  width: 100%; /* Take full width of parent for easier centering of rotated element */
  height: auto; /* Content height */
  left: 0; /* Align to the left edge of the card */
  bottom: 2rem; /* Distance from the physical bottom of the card */
  transform: rotate(-90deg);
  transform-origin: center; /* Rotate the container */
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
/* Responsive adjustments */
@media (max-width: 960px) {
  .container {
    flex-direction: column;
    height: auto;
    padding: 1.5rem;
    gap: 1.5rem;
    width: 95%;
  }

  .playlist-card,
  .player-card {
    width: 100%;
    height: auto;
    max-width: none;
  }

  .playlist-card.collapsed {
    height: 6rem;
    flex: none;
    max-width: 100%;
    max-height: 6rem;
    padding: 0.5rem 1.5rem; /* top/bottom 0.5rem, left/right 1.5rem */
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .playlist-card.collapsed .playlist-header {
    justify-content: flex-start;
    margin-bottom: 0;
    flex-grow: 1;
  }

  .playlist-card.collapsed .sidebar-toggle-btn {
    margin-left: auto;
  }

  /* Logo adjustments for horizontal collapsed card */
  .playlist-card.collapsed .playlist-card-logo {
    display: flex;
    width: auto;
    height: 100%;
    top: 0;
    left: 1rem;
    transform: translateY(0) rotate(0deg);
    transform-origin: center left;
    top: 50%;
    left: 7rem;
    transform: translateY(-50%) rotate(0deg);
    transform-origin: center;
    bottom: auto;
  }

  .playlist-card.open {
    height: auto;
    max-height: 100%; /* Max height for open playlist on small screens */
    padding: 1.5rem;
    flex: none;
  }

  .album-art-wrapper {
    width: 15rem;
    height: 15rem;
  }

  .song-info {
    max-width: 90%;
  }

  .song-title {
    font-size: 2.2rem;
  }

  .song-artist {
    font-size: 1.4rem;
  }

  .progress-bar-container,
  .volume-control {
    width: 90%;
  }

  .player-buttons {
    gap: 1.5rem; /* Slightly reduce gap */
  }

  .player-buttons button,
    .player-buttons .icon__prev, /* Target all button-like elements */
    .player-buttons .icon__next,
    .player-buttons .icon__repeat,
    .player-buttons .icon__shuffle {
    width: 4.5rem; /* Slightly smaller */
    height: 4.5rem;
    font-size: 2rem;
  }

  .circle {
    /* Adjust play button container */
    width: 8rem;
    height: 8rem;
  }
  .circle__btn {
    /* Adjust play button */
    width: 5.5rem;
    height: 5.5rem;
    font-size: 3rem;
  }

  .circle__back-1,
  .circle__back-2 {
    width: 5.5rem;
    height: 5.5rem;
  }
}

@media (max-width: 480px) {
  .container {
    flex-direction: column;
    height: auto;
    padding: 1rem; /* Slightly reduced padding for very small screens */
    gap: 1rem; /* Slightly reduced gap */
    width: 100%; /* Take full width */
    border-radius: 2rem; /* Slightly smaller border-radius for aesthetics */
  }
  .mt-3,
  .my-3 {
    margin-top: 0 !important;
  }

  .playlist-card,
  .player-card {
    width: 100%;
    height: auto;
    max-width: none; /* Ensure no max-width constraints */
    padding: 1rem; /* Consistent padding */
    border-radius: 2rem; /* Consistent border-radius */
  }

  .playlist-card.collapsed {
    height: 5.5rem; /* Slightly smaller height for collapsed state */
    padding: 0.8rem 1rem; /* Adjusted padding */
  }

  .playlist-card.collapsed .playlist-card-logo {
    /* Keep existing styles like left, font-size */
    left: 6.5rem; /* */
    font-size: 2rem; /* */
}

  .playlist-header {
    flex-direction: column;
    align-items: flex-start;
    margin-bottom: 0.8rem; /* Reduced margin */
    gap: 0.8rem; /* Reduced gap */
  }

  .playlist-header h3 {
    font-size: 1.8rem; /* Smaller font size for header */
  }

  .playlist-card:not(.collapsed) .playlist-header .sidebar-toggle-btn {
    position: absolute;
    top: 1rem; /* Adjusted position */
    right: 1rem; /* Adjusted position */
    width: 4rem; /* Smaller toggle button */
    height: 4rem;
    font-size: 1.8rem;
  }

  .playlist-card:not(.collapsed) .playlist-header .search-toggle-btn {
    align-self: flex-start;
    width: 4rem; /* Smaller toggle button */
    height: 4rem;
    font-size: 1.8rem;
  }

  .header-buttons-group {
    flex-wrap: wrap; /* Allow buttons to wrap */
    justify-content: center; /* Center buttons when wrapped */
    gap: 0.8rem; /* Reduced gap between buttons */
  }

  .button-container-flex {
    justify-content: center; /* Center the buttons within this container */
    gap: 0.8rem; /* Reduced gap */
    width: 100%; /* Ensure it takes full width to allow centering */
    flex-wrap: wrap; /* Allow buttons to wrap within the container */
  }

  .btn {
    padding: 0.7rem 1rem; /* Smaller padding for buttons */
    font-size: 1.4rem; /* Smaller font size for button text */
  }

  .btn-pl {
    padding: 0.7rem 1.2rem; /* Adjusted for playlist buttons */
  }

  .search-input-container {
    padding: 0.8rem 0; /* Adjusted padding */
    margin-bottom: 0.8rem; /* Adjusted margin */
  }

  .search-input {
    padding: 0.7rem 1rem; /* Smaller padding for input */
    font-size: 1.2rem; /* Smaller font size for input */
  }

  .playlist-list {
    height: 20rem; /* Slightly reduced height for playlist list */
    padding-right: 0.5rem; /* Smaller scrollbar padding */
  }

  .playlist-item {
    margin-bottom: 0.6rem; /* Reduced margin */
    margin-top: 0.4rem;
    margin-left: 0.4rem;
  }

  .playlist-item-inner {
    padding: 0.8rem 1rem; /* Smaller padding for playlist items */
    font-size: 1.2rem; /* Smaller font size for playlist items */
  }

  .btn__delete {
    font-size: 1.4rem; /* Smaller delete icon */
    padding: 0.4rem; /* Smaller padding for delete button */
  }

  .playlist-card.collapsed .playlist-card-logo {
    left: 6.5rem; /* Adjusted left position */
    font-size: 2rem; /* Slightly smaller logo */
  }

  .album-art-wrapper {
    width: 12rem; /* Smaller album art */
    height: 12rem;
    margin-bottom: 1.5rem; /* Reduced margin */
  }

  .song-info {
    margin-bottom: 1.5rem; /* Reduced margin */
  }

  .song-title {
    font-size: 2rem; /* Adjusted font size */
    margin-bottom: 0.4rem; /* Reduced margin */
  }

  .song-artist {
    font-size: 1.3rem; /* Adjusted font size */
  }

  .progress-bar-container {
    width: 95%; /* Wider progress bar */
    margin-bottom: 1.5rem; /* Reduced margin */
  }

  .progress-slider {
    height: 0.8rem; /* Slightly thinner progress slider */
  }

  .progress-slider::-webkit-slider-thumb,
  .progress-slider::-moz-range-thumb,
  .progress-slider::-ms-thumb {
    width: 1.6rem; /* Smaller thumb */
    height: 1.6rem;
    margin-top: -0.4rem; /* Adjusted margin */
  }

  .time-display {
    font-size: 1.1rem; /* Smaller time display */
    margin-top: 0.4rem;
  }

  .player-buttons {
    gap: 0.8rem; /* Reduced gap */
    margin-bottom: 1.5rem; /* Reduced margin */
  }

  .icon__prev,
  .icon__next,
  .icon__repeat,
  .icon__shuffle {
    width: 4rem; /* Smaller control buttons */
    height: 4rem;
    font-size: 1.8rem;
  }

  .circle {
    width: 7rem; /* Smaller play button container */
    height: 7rem;
  }

  .circle__btn {
    width: 5rem; /* Smaller play/pause button */
    height: 5rem;
    font-size: 2.8rem;
    margin: 0.5rem; /* Adjusted margin */
  }

  .circle__back-1,
  .circle__back-2 {
    width: 5rem; /* Smaller wave backgrounds */
    height: 5rem;
  }

  .volume-control {
    width: 85%; /* Wider volume control */
    gap: 0.8rem; /* Reduced gap */
  }

  .volume-control i {
    font-size: 1.8rem; /* Smaller volume icon */
  }

  .volume-slider {
    height: 0.8rem; /* Thinner volume slider */
  }

  .volume-slider::-webkit-slider-thumb,
  .volume-slider::-moz-range-thumb {
    width: 1.6rem; /* Smaller volume thumb */
    height: 1.6rem;
  }

  .eq-controls {
    padding: 1rem; /* Reduced padding */
    gap: 1rem; /* Reduced gap */
  }

  .eq-band label {
    font-size: 1.2rem; /* Smaller label font size */
  }

  .eq-band span {
    font-size: 1rem; /* Smaller span font size */
  }

  .eq-slider {
    height: 0.8rem; /* Thinner EQ slider */
  }

  .eq-slider::-webkit-slider-thumb,
  .eq-slider::-moz-range-thumb {
    width: 1.6rem; /* Smaller EQ thumb */
    height: 1.6rem;
  }
}
